#!/usr/bin/env bash

#
# Copyright (c) 2015 Jeff Nelson and Cinchapi, Inc.
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

#-------------------------------------------------------------------------------
# This script controls the lifecycle of Concourse Server.

# These options are passed to the JVM runtime. Only place option per line (for
# the sake of readability).
# DO NOT CHANGE THESE VALUES WITHOUT CONTACTING CINCHAPI SUPPORT!
JVMOPTS="
-Xms1024m
-Xmx1024m
-Dcom.sun.management.jmxremote
-Dcom.sun.management.jmxremote.port=9010
-Dcom.sun.management.jmxremote.local.only=false
-Dcom.sun.management.jmxremote.authenticate=false
-Dcom.sun.management.jmxremote.ssl=false
-XX:+UseThreadPriorities
-XX:ThreadPriorityPolicy=42
-XX:CompileThreshold=500
"

# Do not make any changes beyond this point
#-------------------------------------------------------------------------------

# Utility functions
warn ( ) {
  echo "$*"
}

die ( ) {
  echo
  echo "$*"
  echo
  exit 1
}

# Get the OS
OS=`uname -s | tr "[A-Z]" "[a-z]" | tr -d ' '`

# Ensure that this script operates from the application root directory
cd "${0%/*}"
APP_HOME="`pwd -P`/.."
APP_HOME=`cd ${APP_HOME}; pwd`
JVMOPTS="$JVMOPTS -Duser.dir=$APP_HOME"

# The location of the concourse.prefs file that is used to configure the
# application
PREFS=$APP_HOME"/conf/concourse.prefs"
PIDFILE=$APP_HOME"/concourse.pid"
CLASSPATH="$APP_HOME/lib/*"

# Handle any variables in concourse.prefs that affect how the JVM runtime is
# configured
JMX_PREF=`cat $PREFS | grep -e '^jmx_port\s*=\s*[0-9]\{1,\}$' | head -n1 | cut -d'=' -f2 | tr -d ' '`
if [ -z "$JMX_PREF" ]; then
  JMX_PREF="9010"
fi
JVMOPTS=${JVMOPTS/jmxremote.port=9010/jmxremote.port=$JMX_PREF}

HEAP_PREF=`cat $PREFS | grep -e '^heap_size\s*=\s*[0-9]\{1,\}\(m\|M\|mb\|MB\|g\|G\|gb\|GB\)$' | head -n1 | cut -d'=' -f2 | tr -d ' '`
HEAP_PREF=`echo $HEAP_PREF | awk '{print tolower($0)}'`
HEAP=${HEAP_PREF//[!0-9]/}
if [[ $HEAP_PREF == *g* ]]
  then
  HEAP=$(($HEAP * 1024))
fi
if [ -z "$HEAP" ]; then
  HEAP="1024"
fi
JVMOPTS=${JVMOPTS/Xms1024m/Xms$HEAP"m"}
JVMOPTS=${JVMOPTS/Xmx1024m/Xmx$HEAP"m"}

# Determine the Java command to use to start the JVM.
if [ "$OS" = "darwin" ]
  then
  if [ -z "$JAVA_HOME" ]; then
    if [ -x /usr/libexec/java_home ]; then
      JAVA_HOME=`/usr/libexec/java_home`; export JAVA_HOME
    else
      JAVA_HOME="/Library/Java/Home"; export JAVA_HOME
    fi
  fi
fi

if [ -n "$JAVA_HOME" ] ; then
  if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
    # IBM's JDK on AIX uses strange locations for the executables
    JAVA="$JAVA_HOME/jre/sh/java"
    JPS="$JAVA_HOME/jre/sh/jps"
  else
    JAVA="$JAVA_HOME/bin/java"
    JPS="$JAVA_HOME/bin/jps"
  fi
  if [ ! -x "$JAVA" ] ; then
    die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

    Please set the JAVA_HOME variable in your environment to match the
    location of your Java installation."
  fi
else
  JAVA="java"
  JPS="jps"
  which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

  Please set the JAVA_HOME variable in your environment to match the
  location of your Java installation."
fi

# Lifecycle functions
getpid(){
  local pid=`$JPS | grep "ConcourseServer" | cut -d' ' -f1`
  echo $pid
}

start(){
  pid=`getpid`
  if [ "X$pid" = "X" ]
    then
    echo "Starting Concourse Server..."
    exec nohup $JAVA $JVMOPTS -classpath "$CLASSPATH" org.cinchapi.concourse.server.ConcourseServer "$@" >> log/console.log &
    startwait
  else
    echo "Concourse Server is already running (PID:$pid)"
    exit 1
  fi
}

console(){
  pid=`getpid`
  if [ "X$pid" = "X" ]
    then
    echo "Running Concourse Server..."
    exec $JAVA $JVMOPTS -classpath "$CLASSPATH" org.cinchapi.concourse.server.ConcourseServer "$@"
  else
    echo "Concourse Server is already running (PID:$pid)"
    exit 1
  fi
}

dump(){
  echo "Requesting thread dump of Concourse Server..."
  pid=`getpid`
  if [ "X$pid" = "X" ]
    then
    die "Concourse Server is not running"
  else
    kill -3 $pid
    if [ $? -ne 0 ]
      then
      die "Failed to take thread dump of Concourse Server"
    else
      echo "Placed thread dump in the console log"
    fi
  fi
}

startwait(){
  counter=15
  pid=`getpid`
  while [ "X$pid" = "X" -a $counter -gt 0 ] ; do
    echo "."
    sleep 1
    pid=`getpid`
    counter=`expr $counter - 1`
  done
  if [ "X$pid" = "X" ]
    then
    die "ERROR: Concourse Server may have failed to start.
    Please check the console log for more details."
  else
    echo "running PID:$pid"
  fi

}

stop(){
  echo "Stopping Concourse Server..."
  exec $JAVA -classpath "$CLASSPATH" org.cinchapi.concourse.server.ShutdownRunner "$@"
}

# Perform the specified action
cd $APP_HOME
COMMAND=$@
shift 1
case "$COMMAND" in
  'start')
  start "$@"
  ;;

  'stop')
  stop "$@"
  ;;

  'console')
  console "$@"
  ;;

  'dump')
  dump "$@"
  ;;

  *)
  # display help
  ;;
esac

exit 0
